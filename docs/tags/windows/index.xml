<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>windows on &#39;Moais blog</title>
    <link>https://moematsuda-ai.github.io/tags/windows/index.html</link>
    <description>Recent content in windows on &#39;Moais blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sat, 29 Apr 2023 06:30:35 +0000</lastBuildDate><atom:link href="https://moematsuda-ai.github.io/tags/windows/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Windows settings</title>
      <link>https://moematsuda-ai.github.io/windows_settings/index.html</link>
      <pubDate>Wed, 27 Dec 2023 05:17:22 +0000</pubDate>
      <guid>https://moematsuda-ai.github.io/windows_settings/index.html</guid>
      <description>Windowsの設定についてのあれこれ</description>
    </item>
    <item>
      <title>Proxy settings on WSL</title>
      <link>https://moematsuda-ai.github.io/windows_settings/proxy_settings_wsl/index.html</link>
      <pubDate>Sat, 29 Apr 2023 06:30:35 +0000</pubDate>
      <guid>https://moematsuda-ai.github.io/windows_settings/proxy_settings_wsl/index.html</guid>
      <description>/etc/environment http_proxy=http://&amp;lt;proxy&amp;gt;:&amp;lt;port&amp;gt; https_proxy=https://&amp;lt;proxy&amp;gt;:&amp;lt;port&amp;gt; /etc/bash.bashrc export http_proxy=http://&amp;lt;proxy&amp;gt;:&amp;lt;port&amp;gt; export https_proxy=https://&amp;lt;proxy&amp;gt;:&amp;lt;port&amp;gt; /etc/apt/apt.conf Acquire::http::Proxy &amp;#34;http://&amp;lt;proxy&amp;gt;:&amp;lt;port&amp;gt;&amp;#34;; Acquire::https::Proxy &amp;#34;http://&amp;lt;proxy&amp;gt;:&amp;lt;port&amp;gt;&amp;#34;; /etc/wgetrc http_proxy = http://&amp;lt;proxy&amp;gt;:&amp;lt;port&amp;gt; https_proxy = http://&amp;lt;proxy&amp;gt;:&amp;lt;port&amp;gt; ftp_proxy = http://&amp;lt;proxy&amp;gt;:&amp;lt;port&amp;gt; anaconda3/envs/ proxy_servers: http: http://&amp;lt;proxy server&amp;gt;:&amp;lt;port&amp;gt; https: https://&amp;lt;proxy server&amp;gt;:&amp;lt;port&amp;gt; 次のコマンドで設定内容を確認
$ conda config --show </description>
    </item>
    <item>
      <title>Anaconda settings on WSL</title>
      <link>https://moematsuda-ai.github.io/windows_settings/conda_settings_onwsl/index.html</link>
      <pubDate>Thu, 13 Apr 2023 14:25:36 +0000</pubDate>
      <guid>https://moematsuda-ai.github.io/windows_settings/conda_settings_onwsl/index.html</guid>
      <description>出力用DISPLAYの設定 x11のインストール wslにX11をインストール $ sudo apt install x11 VcXsrvのインストールと設定 SourceForge.netからインストーラーをダウンロード インストーラーを実行し，VcXsrvをインストール（推奨の設定でOK！） VcXsrvを起動 Display settings: Multiple windowsを選択し，次へをクリック Client startup: Start no clientを選択肢，次へをクリック Extra settings: ClipboardとPrimary Selection, Native openglにチェックが入っていることを確認し，Disable access controlにチェックを入れてから次へをクリック Finish configuration: Save configurationをクリックしてデスクトップ等にconfigを保存してから完了をクリック Windows+Rでダイアログボックスを開き，shell:startupと入力してエクスプローラーのスタートアップアプリを開く デスクトップ等に保存していたVcXsrvのconfigファイルをスタートアップアプリに移動させる Display環境変数のエクスポート 以下の1文を.bashrcに追加
export DISPLAY=$(cat /etc/resolv.conf | grep nameserver | awk &amp;#39;{print $2}&amp;#39;):0.0 参照 WSL上にXサーバをインストールしてGUIを実現する（VcXsrv編）, メディアID Windows10のWSL上でX11アプリケーションを実行してみた，DevelopersIO errorについて </description>
    </item>
    <item>
      <title>Exception handling on PowerShell </title>
      <link>https://moematsuda-ai.github.io/windows_settings/ps_error/index.html</link>
      <pubDate>Thu, 13 Apr 2023 14:25:36 +0000</pubDate>
      <guid>https://moematsuda-ai.github.io/windows_settings/ps_error/index.html</guid>
      <description>あまりPowerShellを使用しないため知らなかったPowerShellでの例外処理について
実行環境 使用するPowerShellのバージョンは以下の通り（詳細は省略）
&amp;gt; $PSVersionTable Name Value ---- ----- PSVersion 7.3.4 リダイレクト PowerShellでは複数の出力ストリームが用意されており，これらのストリームには特定のコマンド（PowerShellでいうコマンドレット）やリダイレクトを使用して書き込むことが可能。 一部を除き，出力ストリームのリダイレクトがサポートされている。
リダイレクト演算子 PowerShellのリダイレクトでは次のような演算子が用意されている。 ただし成功ストリーム（1）は規定値なので省略可能。
|演算子|概要|構文| | :&amp;ndash; | :&amp;mdash;&amp;mdash; | : &amp;ndash;| |&amp;gt;|指定したストリームのファイルへの書き込み（上書き）|n&amp;gt;| |&amp;raquo;|指定したストリームのファイルへの書き込み（追加）|n&amp;raquo;| |&amp;gt;&amp;amp;1|指定したストリームをSuccessストリームにリダイレクト|n&amp;gt;&amp;amp;1|
ここで，nはストリーム番号を表す。
出力ストリーム ストリーム 詳細 導入バージョン Writeコマンドレット 1 Successストリーム PowerShell 2.0 Write-Output 2 Errorストリーム PowerHhell 2.0 Write-Error 3 Warningストリーム PowerShell 3.0 Write-Warning 4 Verboseストリーム PowerShell 3.0 Write-Warning 5 Debugストリーム PowerShell 3.0 Write-Debug 6 Informationストリーム PowerShell 5.0 Write-Information, Write-Host N/A Progresssストリーム PowerShell 2.0 Write-Progress * すべてのストリーム PowerShell 3.</description>
    </item>
    <item>
      <title>Installing WSL</title>
      <link>https://moematsuda-ai.github.io/windows_settings/install_wsl/index.html</link>
      <pubDate>Sun, 09 Apr 2023 08:37:46 +0000</pubDate>
      <guid>https://moematsuda-ai.github.io/windows_settings/install_wsl/index.html</guid>
      <description> 機能の有効化
コントロールパネル＞プログラム＞Windowsの機能の有効化または無効化をクリック 以下の２つのチェックを入れる Linux用Windowsサブシステム 仮想マシンプラットフォーム wslのインストール
wsl --install Linuxディストリビューションをインストール
オンラインストアからダウンロードできるLinuxディストリビューションの一覧を表示 $ wsl --list --online wsl --l -o 任意のLinuxディストリビューションをインストール $ wsl --install -d &amp;lt;Distribution Name&amp;gt; Linuxディストリビューションを起動し、User NameとPasswordを設定
error: 0x800701bcが出てすぐにwslが落ちてしまう場合はwsl1からwsl2へアップグレード Linuxカーネル更新プログラムパッケージをダウンロード 更新ぷろぐらぺっケージをダブルクリックして実行 以下のコマンドでwsl2を既定のバージョンとして設定 $ wsl --set-default-version 2 参考 WSL を使用して Windows に Linux をインストールする 古いバージョンの WSL の手動インストール手順 Windows10 HomeでもDockerの環境構築ができる ！！　WSL1 からWSL2に変更する際に出るエラー　error : 0x800701bc の解決方！　（2020年9月） </description>
    </item>
    <item>
      <title>setting Keyboard</title>
      <link>https://moematsuda-ai.github.io/windows_settings/keyboard/index.html</link>
      <pubDate>Sun, 09 Apr 2023 08:32:20 +0000</pubDate>
      <guid>https://moematsuda-ai.github.io/windows_settings/keyboard/index.html</guid>
      <description>CapsLockとCtrlの入れ替え installする場合 このリンクからCtrl2Capをダウンロードし、任意の場所に展開． cmdを管理者権限で開き、展開した場所に移動 $ ctrl2cap /instalを実行. 再起動 uninstallする場合 cmdを管理者権限で開き、Ctrl2Capをダウンロードした場所に移動． $ ctrl2cap /uninstallを実行． </description>
    </item>
  </channel>
</rss>